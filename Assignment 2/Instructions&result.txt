Instructions to run the code:
--------------------------------------------------------------------------------------------------------------------------------------------

About file named header.h
_____________________________________________________________________________________________________________

This file contains all the relevant library that need to be included as well as configurable parameters.

-|Configurable Parameters details:
----------------------------------
--1| num_symbol: It define total number of symbols that need to be generated i.e L value (default 1,000,000)
--2| total_state: It define total number of diffrent symbol that should be generated i.e M value (default 8)
--3| first_state: It define the first symbol type, depending upon this next symbols will be in consecutive order (default A)
			      EX: if total_state is 8 and first_state is A then set of state symbols will be
			          {A, B, C, D, E, F, G, H}
--4| file_name_for_seq_of_state: It define file name to store generated seq of state. (default state.txt)
--5| file_name_for_LebZ_coading: It define file name to store encoded seq using LZ coading. (default LZencode.txt)
--6| file_name_for_huffcode: It define file name to store encoded seq using Huffmann coading. (default huffmanencode.txt)
--7| uniform_transition_mat: Make it 1 if you want uniform TPM i.e each value will be 1/total_state else 0 for non-uniform TPM. (default 0)
--8| W: It define Window size that should be used in LZ coding. (default 10000)

**Note: Make sure to change this parameters according to your need.
**Important: Nothing else should be changed in header.h
-------------------------------------------------------------------------------------------------------------

About file named Huffman.c
_____________________________________________________________________________________________________________

This is the C code which on execution generate seq of state file and its huffman coded file.

**Note: This code should be runned before lzencoding.c file.
**Running Instructions:
-----------------------
	|Put all the three file i.e header.h, Huffman.c, lzencoding.c in the same folder.
	|Go to terminal and move the the location of the folder in which above file is stored.
	|Type and run: gcc Huffman.c -lm
	|Then to run the code write: ./a.out

**Check the folder required text files should have been generated. 
-------------------------------------------------------------------------------------------------------------

About file named lzencoding.c
_____________________________________________________________________________________________________________

This is the C code which on execution generate LZ encoding of data generated by Huffman.c.

**Note: This code should be runned after running Huffman.c file.
**Running Instructions:
-----------------------
	|Put all the three file i.e header.h, Huffman.c, lzencoding.c in the same folder.
	|Go to terminal and move the the location of the folder in which above file is stored.
	|Type and run: gcc lzencoding.c -lm
	|Then to run the code write: ./a.out

**Check the folder required text files should have been generated. 
----------------------------------------------------------------------------------------------------------------

RESSULTS:
________________________________________________________________________________________________________________

--|After running the above 2 files you can see 3 text files in the same folder as of code with names given by header file configration.
--|By default:
	. Text File containing generated sequence of symbol: state.txt
	. Text File containing encoded string with Huffmann coading: huffmanencode.txt
	. Text File containing encoded string with LZ coading: LZencode.txt

Results for parameters:
-----------------------
--| num_symbol(i.e L): 1,000,000
--| W: 10,000
--| total_symbol: 8
--| first_state: 'A'
--| uniform_transition_mat: 0


File size of state.txt: 1000000 bytes
File size of huffmanencode.txt: 19,93,386 bytes (*we will consider it as bits as it has only 1 and 0)
File size of LZencode.txt: 45,09,856 bytes (*we will consider it as bits as it has only 1 and 0)

*|Calculation of compression ratio:
---------------------------------------------------------------------------
For Huffman code: file size of huffmann.txt    1993386/8    
                  ------------------------- = ----------  = 0.2492
                   file size of state.txt      1000000


For LZ code:      file size of LZencode.txt    4509856/8   
                  ------------------------- = ----------  = 0.5637
                   file size of state.txt      1000000

-----------------------------------------------------------------------------

*|Bits per Symbol:
--------------------------
For Huffman code: 1.99
For LZ code: 4.51
-------------------------- 

----------------------------------------------------------| End |----------------------------------------------------------------------------   